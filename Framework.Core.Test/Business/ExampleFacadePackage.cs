//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // this is to supress no xml comments in public members warnings 

using SimpleInjector.Packaging;
using SimpleInjector;



namespace Framework.Core.Test.Business
{
    

public class ExampleFacadePackage : IPackage
{
    public void RegisterServices(Container container)
    {
		var factory = new EntityCreateFactory(container);

		factory.Register<Framework.Core.Test.Interfaces.IEntity1, Framework.Core.Test.Entities.Entity1>(Framework.Core.Test.Entities.Entity1.Info);
		factory.Register<Framework.Core.Test.Interfaces.IEntity2, Framework.Core.Test.Entities.Entity2>(Framework.Core.Test.Entities.Entity2.Info);
		factory.Register<Framework.Core.Test.Interfaces.IEntity3, Framework.Core.Test.Entities.Entity3>(Framework.Core.Test.Entities.Entity3.Info);
		factory.Register<Framework.Core.Test.Interfaces.IEnvironment, Framework.Core.Test.Entities.Environment>(Framework.Core.Test.Entities.Environment.Info);
		factory.Register<Framework.Core.Test.Interfaces.IInstallationEnvironment, Framework.Core.Test.Entities.InstallationEnvironment>(Framework.Core.Test.Entities.InstallationEnvironment.Info);
		container.Register<Framework.Core.Test.Interfaces.IEntity1Facade, Entity1Facade>(Lifestyle.Singleton);
		container.Register<Framework.Core.Test.Interfaces.IEntity2Facade, Entity2Facade>(Lifestyle.Singleton);
		container.Register<Framework.Core.Test.Interfaces.IEntity3Facade, Entity3Facade>(Lifestyle.Singleton);
		container.Register<Framework.Core.Test.Interfaces.IEnvironmentFacade, EnvironmentFacade>(Lifestyle.Singleton);
		container.Register<Framework.Core.Test.Interfaces.IInstallationEnvironmentFacade, InstallationEnvironmentFacade>(Lifestyle.Singleton);


    }
}

}



