<#

string businessPath = new FileInfo(Host.TemplateFile).DirectoryName.Replace("\\Models","\\Business");

fileManager.StartNewFile(edmxFileName + "FacadePackage.cs", folderName:"Business");

WriteHeader("SimpleInjector.Packaging","SimpleInjector");
#>

<#
BeginNamespace(namespaceName+".Business", code);
#>

public class <#=edmxFileName#>FacadePackage : IPackage
{
    public void RegisterServices(Container container)
    {
		var factory = new EntityCreateFactory(container);

<#		foreach (var entity in typeMapper.GetItemsToGenerate<EntityType>(itemCollection))
		{
#>		factory.Register<<#=namespaceName + ".Entities."#><#=entity.Name#>, <#=entity.Name#>Facade>();
<#
		}
#>

    }
}

<#
EndNamespace(namespaceName);
#>

<#
// Emit Entity Types
foreach (var entity in typeMapper.GetItemsToGenerate<EntityType>(itemCollection))
{
	fileManager.StartNewFile(entity.Name+"Facade.cs", folderName:"Business");

	WriteHeader("SimpleInjector", "SAAS.Core.Framework");
	#>using <#=edmxFileName#><#=entity.Name#> = <#=namespaceName +".Entities." + entity.Name#>;

<# BeginNamespace(namespaceName+".Business", code);#>
	public partial class <#=entity.Name#>Facade : EntityBusinessFacade<<#=edmxFileName#><#=entity.Name#>>,IEntityBusinessFacade<<#=edmxFileName#><#=entity.Name#>>
	{
        public <#=entity.Name#>Facade(Container container, IEntityRepository<<#=edmxFileName#><#=entity.Name#>> repository, IEntityEventHandlerFactory handlers) : base(container, repository, handlers)
        {
        }
	}
<#
	EndNamespace(namespaceName);

}
#>