<#

//EdmItemCollection ExistingStore2 = (EdmItemCollection)metadataWorkspace.GetItemCollection(DataSpace.CSpace);


foreach (var entity in typeMapper.GetItemsToGenerate<EntityType>(itemCollection))
{

fileManager.StartNewFile(entity.Name+".cs", folderName:"Data");

WriteHeader("System", "System.Collections.Generic", "System.Data", "System.Diagnostics", "System.Security.Claims", "SimpleInjector" ,"Civic.Core.Data","SAAS.Core.Framework","SAAS.Core.Framework.Configuration", namespaceName +".Interfaces");

#>using I<#=edmxFileName#><#=entity.Name#> = <#=namespaceName +".Interfaces.I" + entity.Name#>;

<#

BeginNamespace(namespaceName + ".Data.SqlServer", code);

#>public partial class <#=entity.Name#>Repository : SqlRepository<I<#=edmxFileName#><#=entity.Name#>>
	{
<#
	// Emit Entity Types

	var lowerName = entity.Name.Substring(0,1).ToLower() + entity.Name.Substring(1);
	var keys = new Dictionary<string,string>();
	var keyType="";
	var keyName="";
    foreach (EdmProperty edmProperty in entity.Properties.Where(p => p.TypeUsage.EdmType is PrimitiveType && p.DeclaringType == entity))
    {
        if (ef.IsKey(edmProperty)) {
			keyName = edmProperty.Name;
			keys[keyName] = code.Escape(edmProperty.TypeUsage.EdmType);
			keyType = code.Escape(edmProperty.TypeUsage.EdmType);
		}
	}

#>		public <#=entity.Name#>Repository(Container container) : base(container)
		{
		}
	}
<#
EndNamespace(namespaceName);

}

fileManager.StartNewFile("_RepositoryPackage.cs", folderName:"Data");

WriteHeader("SimpleInjector.Packaging","SimpleInjector","SAAS.Core.Framework");
#>

<#
BeginNamespace(namespaceName+".Data.SqlServer", code);
#>

public class <#=edmxFileName#>RepositoryPackage : IPackage
{
    public void RegisterServices(Container container)
    {
<#foreach (var entity in typeMapper.GetItemsToGenerate<EntityType>(itemCollection))
{#>
		container.Register<IEntityRepository<<#=namespaceName+".Interfaces."#>I<#=entity.Name#>>, <#=entity.Name#>Repository>(Lifestyle.Singleton);
<#}#>
    }
}

<#
EndNamespace(namespaceName);
#>