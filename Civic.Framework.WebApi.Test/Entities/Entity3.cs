//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // this is to supress no xml comments in public members warnings 

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Civic.Core.Data;
using Civic.Framework.WebApi;
using Newtonsoft.Json;
using Civic.Framework.WebApi.Test.Interfaces;

namespace Civic.Framework.WebApi.Test.Entities
{
    [DataContract(Name="entity3")]
    public partial class Entity3 : IEntityIdentity
    {
    
    	[DataMember(Name="someUID")]
        public string SomeUID { get; set; }
    
    	[DataMember(Name="someID")]
    	[JsonIgnore]
        public long SomeID { get; set; }
    
    	[DataMember(Name="modified")]
        public System.DateTime Modified { get; set; }
    
    	[DataMember(Name="otherDate")]
        public Nullable<System.DateTime> OtherDate { get; set; }
    
        [DataMember(Name = "_key")]
    	public string _key 
        { 
    		get {
    			return SomeUID.ToString();
    		}
    	}
    
        [DataMember(Name = "_module")]
        public string _module { get { return Info.Module; } }
        
        [DataMember(Name = "_entity")]
        public string _entity { get { return Info.Entity; } }
        
        public static IEntityInfo Info = new EntityInfo
    	{
            Module = "dbo",
            Entity = "Entity3",
            Name = "dbo.Entity3",
            Properties = new Dictionary<string, IEntityPropertyInfo>
            {
    			{"someUID", new EntityPropertyInfo { Name = "someUID", Type="string", IsKey=true }},
    			{"someID", new EntityPropertyInfo { Name = "someID", Type="long" }},
    			{"modified", new EntityPropertyInfo { Name = "modified", Type="DateTime" }},
    			{"otherDate", new EntityPropertyInfo { Name = "otherDate", Type="DateTime>", IsNullable=true }},
            }
        };
    
    	private IFacadeEntity3 _facade;
    	public Entity3(IFacadeEntity3 facade)
    	{
    		_facade = facade;
    	}
    
    	public IEntityInfo GetInfo() {
    		return Info;
    	}
    
        public IEntityIdentity LoadByKey(IEntityRequestContext context, string key) {
    		var parts = key.Split('|');
    			
    		SomeUID = parts[0];
    
    		return Load(context);
    	}
    
        public void RemoveByKey(IEntityRequestContext context, string key) {
    		LoadByKey(context, key).Remove(context);
    	}
    
    	public IEnumerable<IEntityIdentity> GetPaged(IEntityRequestContext context, int skip, ref int count, bool retCount, string filterBy, string orderBy) {
    		return _facade.GetPagedEntity3(context, skip, ref count, retCount, filterBy, orderBy);
    	}
    
    	public IEntityIdentity Load(IEntityRequestContext context) {
    		return _facade.GetEntity3(context,SomeUID);
    	}
    
    	public void Save(IEntityRequestContext context) {
    		_facade.SaveEntity3(context, this);
    	}
    
    	public void Remove(IEntityRequestContext context) {
    		_facade.RemoveEntity3(context,SomeUID);
    	}
    }
}

