//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // this is to supress no xml comments in public members warnings 

using System;
using System.Collections.Generic;
using System.Security.Claims;
using System.Web.Http;
using Civic.Framework.WebApi.Test.Interfaces;
using InstallationEnvironmentEntity = Civic.Framework.WebApi.Test.Entities.InstallationEnvironment;

namespace Civic.Framework.WebApi.Test.Controllers
{
    [RoutePrefix("api/example/1.0/InstallationEnvironment")]
    [System.CodeDom.Compiler.GeneratedCode("STE-EF",".NET 3.5")]
    public partial class ExampleInstallationEnvironmentController : ApiController 
    {
    	private readonly IExampleFacade _facade;
    
    	public ExampleInstallationEnvironmentController(IExampleFacade facade)
        {
    		_facade = facade;
        }
    
    	[Route("")]
    	public QueryMetadata<InstallationEnvironmentEntity> Get()
    	{
    		ODataV3QueryOptions options = this.GetOptions();
    		var maxrows = Civic.Framework.WebApi.Configuration.T4Config.GetMaxRows("dbo","installationenvironment");
    		var resultLimit = options.Top < maxrows && options.Top > 0 ? options.Top : maxrows;
    		string orderby = options.ProcessOrderByOptions();
    		var result = _facade.GetPagedInstallationEnvironment(User as ClaimsPrincipal, options.Skip, ref resultLimit, options.InlineCount, options.Filter, orderby);
    		return new QueryMetadata<InstallationEnvironmentEntity>(result, resultLimit);
    	}
    
    	[Route("{environmentCode}")]
    	public QueryMetadata<InstallationEnvironmentEntity> Get( String environmentCode )
    	{
    		var result = new List<InstallationEnvironmentEntity> { _facade.GetInstallationEnvironment(User as ClaimsPrincipal,  environmentCode) };
    		return new QueryMetadata<InstallationEnvironmentEntity>(result, 1);
    	}
    
    	[Route("")]
    	public QueryMetadata<InstallationEnvironmentEntity> Post([FromBody]InstallationEnvironmentEntity value)
    	{
    		_facade.SaveInstallationEnvironment(User as ClaimsPrincipal, value);
    		var result = new List<InstallationEnvironmentEntity> { value };
    		return new QueryMetadata<InstallationEnvironmentEntity>(result, 1);
    	}
    
    	[Route("{environmentCode}")]
    	public void Put(String environmentCode, [FromBody]InstallationEnvironmentEntity value)
    	{
    		_facade.SaveInstallationEnvironment(User as ClaimsPrincipal, value);
    	}
    
    	[Route("{environmentCode}")]
    	public void Delete( String environmentCode )
    	{
    		_facade.RemoveInstallationEnvironment(User as ClaimsPrincipal,  environmentCode );
    	}
    }
}

