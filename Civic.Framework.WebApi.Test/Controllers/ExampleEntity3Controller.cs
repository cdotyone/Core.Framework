//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // this is for supress no xml comments in public members warnings 

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.Serialization;
using System.Web.Http;
using Civic.Framework.WebApi.Test.Services;
using Civic.Framework.WebApi.Test.Entities;
using Civic.Framework.WebApi;
using Entity3Entity = Civic.Framework.WebApi.Test.Entities.Entity3;

namespace Civic.Framework.WebApi.Test.Controllers
{
    [RoutePrefix("api/example/1.0/Entity3")]
    [System.CodeDom.Compiler.GeneratedCode("STE-EF",".NET 3.5")]
    public partial class ExampleEntity3Controller : ApiController 
    {
    	private static readonly ExampleService _service = new ExampleService();
    
    	[Route("")]
    	public QueryMetadata<Entity3Entity> Get()
    	{
    		ODataV3QueryOptions options = this.GetOptions();
    		var maxrows = Civic.Framework.WebApi.Configuration.T4Config.GetMaxRows("dbo","entity3");
    		var resultLimit = options.Top < maxrows && options.Top > 0 ? options.Top : maxrows;
    		string orderby = options.ProcessOrderByOptions();
    		var result = _service.GetPagedEntity3(options.Skip, ref resultLimit, options.InlineCount, options.Filter, orderby);
    		return new QueryMetadata<Entity3Entity>(result, resultLimit);
    	}
    
    	[Route("{someUID}")]
    	public QueryMetadata<Entity3Entity> Get( String someUID )
    	{
    		var result = new List<Entity3Entity> { _service.GetEntity3( someUID) };
    		return new QueryMetadata<Entity3Entity>(result, 1);
    	}
    
    	[Route("")]
    	public String Post([FromBody]Entity3Entity value)
    	{
    		_service.AddEntity3(value);
    		return value.SomeUID;
    	}
    
    	[Route("{someUID}")]
    	public void Put(String someUID, [FromBody]Entity3Entity value)
    	{
    		value.SomeUID = someUID;
    		_service.ModifyEntity3(value);
    	}
    
    	[Route("{someUID}")]
    	public void Delete( String someUID )
    	{
    		_service.RemoveEntity3( someUID );
    	}
    }
}

