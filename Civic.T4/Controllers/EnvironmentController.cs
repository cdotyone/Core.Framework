//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // this is for supress no xml comments in public members warnings

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.Serialization;
using System.Web.Http;
using System.Web.Mvc;
using Civic.T4.Services;
using Civic.T4.Entities;
using Civic.T4.WebApi;
using EnvironmentEntity = Civic.T4.Entities.Environment;

namespace Civic.T4.Controllers
{
    [RoutePrefix("api/example/1.0/Environment")]
    [System.CodeDom.Compiler.GeneratedCode("STE-EF", ".NET 3.5")]
    public partial class EnvironmentController : ApiController
    {
        private static readonly ExampleService _service = new ExampleService();

        [Route("")]
        public QueryMetadata<EnvironmentEntity> Get()
        {
            ODataV3QueryOptions options = this.GetOptions();
            var resultLimit = options.Top < 100 ? options.Top : 100;
            string orderby = options.ProcessOrderByOptions();
            var result = _service.GetPagedEnvironment(options.Skip, ref resultLimit, options.InlineCount, options.Filter, orderby, options.Expand);
            return new QueryMetadata<EnvironmentEntity>(result, resultLimit);
        }

        [Route("{id}")]
        public QueryMetadata<EnvironmentEntity> Get(int id)
        {
            ODataV3QueryOptions options = this.GetOptions();
            var result = new List<EnvironmentEntity> { _service.GetEnvironmentById(id, options.Expand) };
            return new QueryMetadata<EnvironmentEntity>(result, 1);
        }


        [Route("")]
        public int Post([FromBody]EnvironmentEntity value)
        {
            _service.AddEnvironment(value);
            return value.Id;
        }

        [Route("{id}")]
        public void Put(int id, [FromBody]EnvironmentEntity value)
        {
            value.Id = id;
            _service.ModifyEnvironment(value);
        }

        [Route("{id}")]
        public void Delete(int id)
        {
            _service.RemoveEnvironment(id);
        }
    }
}

